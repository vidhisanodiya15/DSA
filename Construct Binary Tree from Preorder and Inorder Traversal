class Solution {
public:

   unordered_map<int,int> in_map;
   TreeNode* bt(vector<int>& preorder, vector<int>& inorder, int &preindex, int left, int right){
    if(left > right) return nullptr;
    int val = preorder[preindex];
    preindex++;

    TreeNode* root = new TreeNode(val);
    int index = in_map[val];

    root->left = bt(preorder,inorder, preindex,left,index-1);
    root->right = bt(preorder,inorder, preindex,index+1,right);
    return root;
    
   }
   
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        in_map={};

        for(int i=0;i<inorder.size();i++){
            in_map[inorder[i]] = i;
        }
        int preindex = 0;

        TreeNode* root = bt(preorder, inorder, preindex , 0, preorder.size()-1);
        return root;
        
    }
};
